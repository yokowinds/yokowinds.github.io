---
layout: post
title: "项目总结-光大网关迁移"
date: 2012-10-28 19:52:00 +0800
comments: true
categories: 管理
---
<p>光大迁移在上周顺利上线， 但过程着实不轻松。</p><p>这是我做的第一家完整的迁移项目，零零散散记录了项目过程的一些问题、我的感想、以及可以立即着手做的一些改进， 与各位PM共享： </p><p>&nbsp;</p><p>遇到的问题：</p><p class="edui-filter-align-left"><strong>环境问题</strong></p><p class="edui-filter-align-left">paycore的数据库表中数据被清空了、重新拉流才解决。</p><p class="edui-filter-align-left">开发库迁移，导致功能测试时库查询速度非常慢，甚至查不出来，特别是短信校验码的库，测一笔要等5分钟。</p><p class="edui-filter-align-left">异常卡测试5次就没用了（比如持卡人校验在代码中做过限制）。后来找开发临时修改服务器代码才搞定。</p><p class="edui-filter-align-left">测试时发现会计的入账规则没有配置。 但开发环境下很多配置都是缺失的，重新找核心人员完成配置。测试觉得：迁移中开发不能仅关注超网脚本，还要关注业务整体流程。开发觉得：有待商榷, 是不是迁移项目可以避开这些结算配置？ 因为生产上肯定是好的， 没必要在功能测试环境上纠结。</p><p class="edui-filter-align-left">DRM搞演练，paycore把所有模式改为备库了，导致测试进度延迟了1.5天。</p><p class="edui-filter-align-left">SIT 上连接anymock，响应超时。 齐军反馈是不知道谁在跑压测，无法提供服务，影响测试进度0.5天。</p><p>&nbsp;</p><p class="edui-filter-align-left"><strong>设计问题</strong></p><p class="edui-filter-align-left">签约只有卡通、借记卡快捷支持发送到超网； 信用卡要一家家银行去改。所以以后每次迁移信用卡，都要改poscore。 </p><p class="edui-filter-align-left">katong系统的修改，之前在群里毛公问过，但无人回复。结果到发布计划评审时才发现原来不用修改。</p><p class="edui-filter-align-left">数据订正时需要签约中心关闭签约入口。但零散入口较多，没办法关全面，最后修改了发布计划，没关闭渠道。</p><p>&nbsp;</p><p class="edui-filter-align-left"><strong>人员问题</strong></p><p class="edui-filter-align-left">张小彬接口联调没有问题，很积极。 但对业务不熟悉，后面有点支持不过来了。（特别是涉及到资金流水落地的）</p><p class="edui-filter-align-left">新人，发起充值金额很高，每次都去查校验码，影响进度。</p><p class="edui-filter-align-left">SIT的脚本什么时候导入？上了SIT，开发没有通知、 测试也不知道SIT脚本是由他们来导入的。</p><p class="edui-filter-align-left">SIT头两天一直是走settlecore，一直没人处理。导致SIT测试时间太短。开发说没人找他，测试说开发没响应。（沟通问题，已找当事人） </p><p class="edui-filter-align-left">新人，做掉单老是不成功 ，原因是流水状态改成UN ， 不能改成FA， 否则掉单不会触发。（很囧）</p><p class="edui-filter-align-left">预发布确认的列表仅发给了 PD ， 没有PM和开发同学 。</p><p class="edui-filter-align-left">做预发布/发布支付分流，要邮件给PD该流程没有固化下来，很多开发是问别人才知道的。</p><p class="edui-filter-align-left">预约掉单查询需结算配合，该流程没有固话下来，很多开发是问别人才知道。</p><p>&nbsp;</p><p class="edui-filter-align-left"><strong>计划问题</strong></p><p class="edui-filter-align-left">充退人员很晚才进入项目。</p><p class="edui-filter-align-left">数据订正的渠道路由人员介入时间太晚。</p><p class="edui-filter-align-left">金融交换的脚本没跟着升级包。结果上了SIT之后测不通才发现有问题。临时找子龙，做的升级包数据库变更。</p><p>&nbsp;</p><p class="edui-filter-align-left"><strong>银行问题</strong></p><p class="edui-filter-align-left">“银行卡测试超限了，找PM重新找银行换卡”。 轻松一句话， 对于技改的项目推动起来还是蛮困难。毕竟技改是我们发起，银行那边不是放在最高优先级。</p><p>&nbsp;</p><p>&nbsp;</p><p>感想：</p><p class="edui-filter-align-left">1. 组织大了，部门间配合的效率越来越依赖于接口人的响应速度。 </p><p class="edui-filter-align-left">2. 都说要做平台，但平台建起来，平台就成了黑盒， 负责平台维护的人就成了最忙的人，特别是在没有平台使用手册的情况下。</p><p class="edui-filter-align-left">3. 新人（外包）在项目中需要辅导却苦逼地自我摸索；老人（自有员工）忙于应付各种评估、评审， 没时间辅导却要对质量负责； PM不懂技术细节干着急还要为进度买单。 每个人都有压力，但压力的源头在哪里？</p><p class="edui-filter-align-left">4. 既然做核心，先要确保稳定，哪怕是测试环境。金融也在逐渐成为半个核心， 如何确保核心的配置稳定是个大挑战。几乎每个项目都会出现”谁改了我的配置 “ 这样无可奈何的情况。</p><p class="edui-filter-align-left">5. 很多时候我们在测“配置”，而不是在测“代码”。这种工作是不是可以通过各种检查工具去完成？ &nbsp;</p><p class="edui-filter-align-left">6. 流程，流程，还是流程。流程可以避免犯错，但当执行者不知道流程的时候，流程就沦为官僚，就成了效率的最大杀手。 </p><p class="edui-filter-align-left">7. 我们需要慢下来。 不是指通过各种推和挡来降低需求响应速度，而是要减少隐形沟通成本、优化研发工具和流程来提高效率， 让团队成员压力降下来、进而慢下来。</p><p class="edui-filter-align-left">8. 对PM的要求会越来越高， 所有活动计划要提前半个月制定，严格控制变更，尽量减少变更引发的沟通混乱。 </p><p>&nbsp;</p><p>后续可以做的改进：</p><p class="edui-filter-align-left">1. 增加培训： 升级包流程（如何申请代码合并、何时要写发布计划等）+ 迁移流程（如何排查环境问题、如何检查金融交换是否切换完成等）</p><p class="edui-filter-align-left">2. 整理渠道迁移的项目管理checklist，包括前期与银行协商测试环境、项目安排中涉及到金融交换、渠道路由的人员安排、预发布结算人员、运维人员的配合等。增加计划性、减少变更成本 、培养默契。 </p><p class="edui-filter-align-left">3. 充退流程的梳理、 充退常见问题排查过程整理；（正好后续续程颢会来学习充退，过程中可以产出一些文档）</p><p>&nbsp;</p><p>&nbsp;</p><p><strong> </strong></p>
